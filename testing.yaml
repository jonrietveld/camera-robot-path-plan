shots:                                                              
  - start_time: 2.6                                                               # Start time of the shot (seconds)
    end_time: 4                                                                 # End time of the shot (seconds)
    angle_range: [-15,15]                                                       # All allowed angles in the robots field of view (degrees)
    dist_range: [3,5]                                                           # The range a person/actor may be from the robot (meters)
    actor_facing: 180                                                             # Number of degrees off the actor is from the direction the camera is facing
  - start_time: 6.6                                                               # Start time of the shot (seconds)
    end_time: 8                                                                 # End time of the shot (seconds)
    angle_range: [-5,25]                                                       # All allowed angles in the robots field of view (degrees)
    dist_range: [3,5]                                                           # The range a person/actor may be from the robot (meters)
    actor_facing: 20                                                            # Number of degrees off the actor is from the direction the camera is facing
  - start_time: 2.6                                                               # Start time of the shot (seconds)
    end_time: 5.4                                                                 # End time of the shot (seconds)
    angle_range: [-15,15]                                                       # All allowed angles in the robots field of view (degrees)
    dist_range: [3,5]                                                           # The range a person/actor may be from the robot (meters)
    actor_facing: 90                                                           # Number of degrees off the actor is from the direction the camera is facing

actor:                                                                                     
  path: [[1,15,0,5,0],[39,15,-90,5,10]]          # Path an actor will follow (x,y,theta_degrees,turn_radius_from_previous_timestep,time)
  timestep_resolution: .1                                                       # The accuracy of recording the actor's path timestep. Used to test robot's dubins constraints agains path for validity checking
  color: 'red'                                                                  # Color of the actor
                                                                                   
animation:                                                                                     
  fps: 30                                                                       # Number of frames per second for animation - Does not effect solving time
  in_shot: 'red'                                                                # Color of the shot box if the actor is in the shot
  out_shot: 'blue'                                                              # Color of the shot box if the actor is not in the shot
                                                                                  
map:                                                                                    
  path: white.png                                                               # filename or directory name of the obsticle map
  height: 30                                                                    # Height in meters of the height of the png file (giving scale for png file)
  width: 40                                                                     # Width in meters of the width of the png file (giving scale for png file)
                                                                                  
solve:                                                                                    
  resolution: .1                                                                # Quantity in meters to consider as a discrete point when finding a solution - linearly effects runtime of code
  PRM_timeout: 20                                                              # Number of seconds before the PRM algorithm will admit defeat (can be inf for infinity)
  PRM_point_dist: 10
  PRM_degrees: 20
  PRM_points: 'grid'                                                            # How the PRM algorithm finds points. Can be either 'grid' or 'random'. defaults to 'grid'
  PRM_num_points: 125                                                           # Number of points to search through in PRM algorithm - only for random points. (rounded down to nearest cubic number for grid)
                                                                                  
robots:                                                                         # robots
  - max_speed: 13                                                                # Max speed in meters per second
    max_turn_rad: 0.7                                                           # The raduis of the smallest circle the robot can turn in. Radius in meters - Actual is roughly 0.6858
    start_coord: [0,0,0]                                                        # Starting coordinates of robot(s), can be "None"
    fov: 50                                                                     # Field of view of robot camera in degrees
    camera_orientation: 180                                                     # Default camera orientation - Degrees from facing forward
    color: 'green'                                                              # Color of the robot
                                                                                  
  - max_speed: 13                                                                # Max speed in meters per second
    max_turn_rad: 0.7                                                           # The raduis of the smallest circle the robot can turn in. Radius in meters - Actual is roughly 0.6858
    start_coord: [35,25,0]                                                      # starting coordinates of robot(s), can be "None"
    fov: 50                                                                     # Field of view of robot camera in degrees
    camera_orientation: 180                                                     # Default camera orientation - Degrees from facing forward
    color: 'green'                                                           # Color of the robot
